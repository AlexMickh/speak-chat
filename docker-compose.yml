services:
  postgres:
    image: postgres:latest
    container_name: postgres_chat
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres_data
    volumes:
      - postgres:/data/postgres
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  minio:
   image: minio/minio:latest
   container_name: minio_chat
   command: server --console-address ":9002" /data/
   ports:
     - "${MINIO_PORT}:9000"
     - "9002:9002"
   environment:
     MINIO_ROOT_USER: ${MINIO_ROOT_USER}
     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
   volumes:
     - minio-storage:/data
   healthcheck:
     test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
     interval: 30s
     timeout: 20s
     retries: 3

  redis:
    image: redis:latest
    container_name: redis_chat
    ports:
      - ${REDIS_PORT}:6379
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping"]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: unless-stopped


volumes:
  postgres:
  minio-storage:
  redis: